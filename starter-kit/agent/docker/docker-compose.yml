version: '3'
services:

  caddyx:
    build:
      context: ../eao-agent
      dockerfile: Dockerfile.caddy
    environment:
      TOB_API_URL: ${TOB_API_URL:-}
      WEB_BASE_HREF: ${WEB_BASE_HREF:-/}
      WEB_HOST_NAME: ${WEB_HOST_NAME:-0.0.0.0}
      WEB_HOST_PORT: ${WEB_HOST_PORT:-8080}
      WEB_HOST_TLS: ${WEB_HOST_TLS:-off}
      AGENT_HOST: ${AGENT_HOST:-agent}
      AGENT_PORT: ${AGENT_PORT:-8000}
    links:
      - evlockr-agent:agent
    networks:
      - evlockr
    ports:
      - ${WEB_HTTP_PORT:-5000}:${WEB_HOST_PORT:-8080}
    volumes:
      - caddyx-data:/root/.caddy
      - caddyx-logs:/srv/logs

  evlockr-agent:
    build:
      context: ../eao-agent
      dockerfile: Dockerfile
    environment:
      APPLICATION_URL: ${APPLICATION_URL:-http://localhost:5001}
      ENDPOINT_URL: ${ENDPOINT_URL:-http://localhost:5001}
      CONFIG_ROOT: ../config
      ENVIRONMENT: ${ENVIRONMENT:-default}
      INDY_LEDGER_URL: ${LEDGER_URL:-http://localhost:9000}
      LOG_LEVEL: ${LOG_LEVEL:-}
      PYTHON_ENV: ${PYTHON_ENV:-development}
      TOB_API_URL: ${TOB_API_URL:-}
      TOB_APP_URL: ${TOB_APP_URL:-}
      WALLET_TYPE: ${WALLET_TYPE}
      POSTGRESQL_WALLET_HOST: ${POSTGRESQL_WALLET_HOST}
      POSTGRESQL_WALLET_PORT: ${POSTGRESQL_WALLET_PORT}
      POSTGRESQL_WALLET_USER: ${POSTGRESQL_USER}
      POSTGRESQL_WALLET_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_WALLET_ADMIN_PASSWORD: ${POSTGRESQL_ADMIN_PASSWORD}
      WALLET_ENCRYPTION_KEY: ${WALLET_ENCRYPTION_KEY}
      WALLET_SEED_VONX: ${WALLET_SEED_VONX:-}
      ISSUER_WALLET_DID: ${ISSUER_WALLET_DID}
      HTTP_FORCE_CLOSE_CONNECTIONS: "true"
    networks:
      - orgbook
      - evlockr
    depends_on:
      - evlockr-wallet-db
    entrypoint: >
      /bin/bash -c "
        echo sleeping ...;
        sleep 5;
        ../docker-entrypoint.sh;"
    volumes:
      - evlockr-agent-wallet:/home/indy/.indy_client/wallet

  evlockr-wallet-db:
    image: registry.access.redhat.com/rhscl/postgresql-95-rhel7:9.5
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_ADMIN_PASSWORD=${POSTGRESQL_ADMIN_PASSWORD}
    networks:
      - orgbook
      - evlockr
    ports:
      - 5435:5432
    volumes:
      - evlockr-wallet-db:/var/lib/pgsql/data

  von-mara:
    build:
      context: ../eao-pipeline
      dockerfile: docker/mara-app/Dockerfile
    environment:
      - VONX_API_URL=${VONX_API_URL:-http://evlockr-agent:8000/eao-evidence-locker}
      # [eao mongo database]
      - EAO_MDB_DB_HOST=${EAO_MDB_DB_HOST:-mongo}
      - EAO_MDB_DB_PORT=${EAO_MDB_DB_PORT:-27017}
      - EAO_MDB_DB_DATABASE=${EAO_MDB_DB_DATABASE:-eao_db}
      - EAO_MDB_DB_USER=${EAO_MDB_DB_USER:-root}
      - EAO_MDB_DB_PASSWORD=${EAO_MDB_DB_PASSWORD:-example}
      # [event_processor]
      - EVENT_PROC_DB_HOST=${EVENT_PROC_DB_HOST:-von-pipeline-db}
      - EVENT_PROC_DB_PORT=${EVENT_PROC_DB_PORT:-5432}
      - EVENT_PROC_DB_DATABASE=${EVENT_PROC_DB_DATABASE:-eao_locker_db}
      - EVENT_PROC_DB_USER=${EVENT_PROC_DB_USER:-eao_locker_db}
      - EVENT_PROC_DB_PASSWORD=${EVENT_PROC_DB_PASSWORD:-eao_locker_db_pwd}
      # [mara_db]
      - MARA_DB_HOST=${MARA_DB_HOST:-von-pipeline-db}
      - MARA_DB_PORT=${MARA_DB_PORT:-5432}
      - MARA_DB_DATABASE=${MARA_DB_DATABASE:-mara_db}
      - MARA_DB_USER=${MARA_DB_USER:-mara_db}
      - MARA_DB_PASSWORD=${MARA_DB_PASSWORD:-mara_db_pwd}
    networks:
      - evlockr
    ports:
      - 5050:5000
    depends_on:
      - von-pipeline-db
      - mongo
    entrypoint: >
      /bin/bash -c "
        echo sleeping ...;
        sleep 5;
        ./docker-entrypoint.sh;"

  von-pipeline-db:
    build:
      context: ../eao-pipeline
      dockerfile: docker/postgres/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRESQL_DATABASE}
    networks:
      - evlockr
    ports:
      #- 5432:5432
      - 5444:5432
    volumes:
      - mara-data:/var/lib/pgsql/data

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - evlockr
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db

volumes:
  caddyx-data:
  caddyx-logs:
  evlockr-agent-wallet:
  evlockr-wallet-db:
  mara-data:
  mongo-data:

networks:
  evlockr:
  orgbook:
    external:
      name: tob_tob
